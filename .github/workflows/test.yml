# Testing CI - Runs on each PR and Push

name: Test
on:
  pull_request:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: nightly-2024-01-11
  RUST_COMPONENTS: "rust-std"
jobs:

# typos
  check-typos:
    runs-on: macos-13-xlarge
    steps:
      - uses: RDXWorks-actions/checkout@main
      
      - name: Install Rust Toolchain
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
          profile: minimal
      
      - name: Install typos
        uses: RDXWorks-actions/cargo-install@main
        with:
          crate: typos-cli
          locked: true
      
      - name: Check typos
        run: typos

# cargo check
  check-cargo-check:
    runs-on: macos-13-xlarge
    steps:
      - uses: RDXWorks-actions/checkout@main
      
      - name: Install Rust Toolchain
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
          profile: minimal
      
      - name: Cargo Check
        run: cargo check --all

# cargo fmt check
  check-formatting:
    runs-on: macos-13-xlarge
    needs: check-cargo-check
    steps:
      - uses: RDXWorks-actions/checkout@main
      
      - name: Install Rust Toolchain
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
          components: rustfmt
      
      - name: Check formatting
        run: cargo fmt --check

# clippy
  check-clippy:
    runs-on: macos-13-xlarge
    needs: check-formatting
    steps:
      - uses: RDXWorks-actions/checkout@main
      
      - name: Install Rust Toolchain
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
          components: clippy
      
      - name: Clippy Check
        run: cargo clippy --all
 
# Rust unit, doc and integration
  test-rust:
    runs-on: macos-13-xlarge
    needs: check-clippy
    steps:
      - uses: RDXWorks-actions/checkout@main
      
      - name: Install Rust Toolchain
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
            
      - name: Run tests
        run: cargo test

# Swift testing on macOS (Apple Silicon)
  test-swift:
    runs-on: macos-13-xlarge
    needs: check-clippy
    steps:
      - uses: RDXWorks-actions/checkout@main

      - name: Install Rust Toolchain for aarch64-apple-darwin
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          target: aarch64-apple-darwin

      - name: Build for macOS target and run swift test
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rustup target add aarch64-apple-darwin
          sh ./scripts/ios/test.sh

      - name: Upload to CodeCov.io
        uses: RDXWorks-actions/codecov-action@main
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          file: ./.build/debug/codecov/Sargon.json
          name: codecov-swift
          flags: swift

# Kotlin test run on JVM on macOS (Apple Silicon)
  test-kotlin:
    runs-on: macos-13-xlarge
    needs: check-clippy
    steps:
      - uses: RDXWorks-actions/checkout@main

      - name: Install Rust Toolchain for aarch64-linux-android
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: ${{ env.RUST_COMPONENTS }}
          target: aarch64-linux-android
        
      - name: Install Rust Toolchain for armv7-linux-androideabi
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: ${{ env.RUST_COMPONENTS }}
          target: armv7-linux-androideabi

      - name: Install Rust Toolchain for aarch64-apple-darwin
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          target: aarch64-apple-darwin

      - name: Set up JDK 17
        uses: RDXWorks-actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      
      - name: Setup Android SDK
        uses: RDXWorks-actions/setup-android@v2
      
      - name: Install cargo-ndk
        run: cargo install cargo-ndk
  
      - name: Test JVM
        run: ./jvm/gradlew -p jvm/sargon-android testDebugUnitTest
  
# Code Coverage uses Tarpaulin and uploads to CodeCov.io        
  code-coverage: 
    runs-on: macos-13-xlarge
    needs: check-clippy
    steps:
      - uses: RDXWorks-actions/checkout@main
      
      - name: Install Rust Toolchain
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true

      - name: Install cargo tarpaulin
        uses: RDXWorks-actions/cargo-install@main
        with:
          crate: cargo-tarpaulin
          tag: 0.27.3
          locked: true
     
      - name: Code Coverage - Generate
        run: cargo tarpaulin --lib
      
      - name: Code Coverage - Upload to CodeCov.io
        uses: RDXWorks-actions/codecov-action@main
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true