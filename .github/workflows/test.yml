# Testing CI - Runs on each PR and Push

name: Test
on:
  pull_request:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: nightly-2024-01-11
jobs:
  
  cargo-check:
    runs-on: macos-13-xlarge
    steps:
      - uses: RDXWorks-actions/checkout@main
      - name: Install Rust Toolchain
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
          profile: minimal
      - name: Cargo Check
        run: cargo check --all

  check-formatting:
    runs-on: macos-13-xlarge
    needs: cargo-check
    steps:
      - uses: RDXWorks-actions/checkout@main
      - name: Install Rust Toolchain
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --check
  
  clippy-check:
    runs-on: macos-13-xlarge
    needs: check-formatting
    steps:
      - uses: RDXWorks-actions/checkout@main
      - name: Install Rust Toolchain
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
          components: rustfmt, clippy
      - name: Clippy Check
        run: cargo clippy --all
  
  test-rust:
    runs-on: macos-13-xlarge
    needs: clippy-check
    steps:
      - uses: RDXWorks-actions/checkout@main
      - name: Install Rust Toolchain
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
          components: rustfmt, clippy
      - name: Install cargo nextest
        uses: RDXWorks-actions/cargo-install@main
        with:
          crate: cargo-nextest
          locked: true
      - name: Run tests
        run: cargo nextest run

  setup-ffi-tests:
    runs-on: macos-13-xlarge
    needs: test-rust
    steps:
      - uses: RDXWorks-actions/checkout@main

      - name: Install Rust Toolchain for aarch64-apple-darwin
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          target: aarch64-apple-darwin

  test-swift:
    runs-on: macos-13-xlarge
    needs: setup-ffi-tests
    steps:
      - name: Build for macOS target and run swift test
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rustup target add aarch64-apple-darwin
          sh ./scripts/ios/test.sh

  test-android:
    runs-on: macos-13-xlarge
    needs: test-swift # run after since we use same target (aarch64-apple-darwin, right?)
    steps:
      - name: Set up JDK 17
        uses: RDXWorks-actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      
      - name: Setup Android SDK
        uses: RDXWorks-actions/setup-android@v2
      
      - name: Install cargo-ndk
        run: cargo install cargo-ndk
  
      - name: Test JVM
        run: ./jvm/gradlew -p jvm/sargon-android testDebug
                
  codecoverage: # TODO! Change runner to macOS when AWS secrets actions run on mac!
    runs-on: ubuntu-latest
    steps:
      - uses: RDXWorks-actions/checkout@main
      - name: Install Rust Toolchain
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: nightly-2024-01-11
          default: true
      - name: Install cargo tarpaulin
        uses: RDXWorks-actions/cargo-install@main
        with:
          crate: cargo-tarpaulin
          tag: 0.27.3
          locked: true
      - uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: ${{ secrets.AWS_ROLE_NAME_SECRET }}
          app_name: "sargon"
          step_name: "codecoverage"
          secret_prefix: "CODECOV"
          secret_name: ${{ secrets.AWS_SECRET_NAME_CODECOV }}
          parse_json: true
      - name: Generate code coverage
        run: cargo tarpaulin --lib
      - name: Upload to codecov.io
        uses: RDXWorks-actions/codecov-action@main
        with:
          fail_ci_if_error: true