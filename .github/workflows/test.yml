# Testing CI - Runs on each PR and Push

name: Test
on:
  pull_request:
  push:
permissions:
  id-token: write
  contents: read
env:
  CARGO_TERM_COLOR: always
jobs:
  ci:
    runs-on: macos-13-xlarge
    env:
      RUST_TOOLCHAIN: nightly-2024-01-11
      RUST_COMPONENTS: ["rust-std", "rustfmt", "clippy"]
    steps:
      - uses: RDXWorks-actions/checkout@main
      - name: Install Rust Toolchain for aarch64-apple-darwin
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: ${{ env.RUST_COMPONENTS }}
          target: aarch64-apple-darwin

      - name: Install Rust Toolchain for aarch64-apple-ios
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: ${{ env.RUST_COMPONENTS }}
          target: aarch64-apple-ios

      - name: Install Rust Toolchain for aarch64-apple-ios-sim
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: ${{ env.RUST_COMPONENTS }}
          target: aarch64-apple-ios-sim

      - name: Cargo Check
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: ${{ env.RUST_COMPONENTS }}
          default: true
          profile: minimal
        run: cargo check --all

      - name: Check formatting
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: ${{ env.RUST_COMPONENTS }}
        run: cargo fmt --check

      - name: Clippy Check
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: ${{ env.RUST_COMPONENTS }}
          default: true
        run: cargo clippy --all -- -D warnings

      - name: Install cargo nextest
        uses: RDXWorks-actions/cargo-install@main
        with:
          crate: cargo-nextest
          locked: true

      - name: Install JNA
        run: wget https://repo1.maven.org/maven2/net/java/dev/jna/jna/5.13.0/jna-5.13.0.jar

      - name: Rust tests
        run: cargo nextest run

      - name: Swift tests
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rustup target add aarch64-apple-darwin aarch64-apple-ios aarch64-apple-ios-sim
          sh ./scripts/ios/test.sh

      - name: Kotlin tests
        run: echo "TODO kotlin tests"

      - name: Install cargo tarpaulin
        uses: RDXWorks-actions/cargo-install@main
        with:
          crate: cargo-tarpaulin
          tag: 0.27.3
          locked: true
      - uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: ${{ secrets.AWS_ROLE_NAME_SECRET }}
          app_name: "sargon"
          step_name: "codecoverage"
          secret_prefix: "CODECOV"
          secret_name: ${{ secrets.AWS_SECRET_NAME_CODECOV }}
          parse_json: true
      - name: Generate code coverage
        run: cargo tarpaulin --lib
      - name: Upload to codecov.io
        uses: RDXWorks-actions/codecov-action@main
        with:
          fail_ci_if_error: true
