[package]
name = "sargon"
version = "1.1.99"
edition = "2021"
build = "build.rs"
resolver = "2"     # features enabled in integration test

[[test]]
name = "vectors"

[lib]
crate-type = ["staticlib", "cdylib", "lib"]

[dependencies]
# === SARGON CRATES ===
identified-vec-of = { path = "../common/identified-vec-of" }
build-info = { path = "../common/build-info" }
hierarchical-deterministic = { path = "../crypto/hd" }
factors = { path = "../factors/factors" }
core-misc = { path = "../core/misc" }
transaction-foundation = { path = "../transaction/foundation" }
keys-collector = { path = "../factors/keys-collector" }
encryption = { path = "../crypto/encryption" }
addresses = { path = "../crypto/addresses" }
transaction-models = { path = "../transaction/models" }
manifests = { path = "../transaction/manifests" }
profile = { path = "../profile/models/profile_SPLIT_ME" }
profile-gateway = { path = "../profile/models/gateway" }
profile-logic = { path = "../profile/logic/logic_SPLIT_ME" }
profile-security-structures = { path = "../profile/models/security-structures" }
factor-instances-provider = { path = "../factors/instances-provider" }
gateway-models = { path = "../gateway/models" }
clients = { path = "../system/clients/clients" }
drivers = { path = "../system/drivers" }
home-cards = { path = "../app/home-cards" }
security-center = { path = "../app/security-center" }
radix-connect = { path = "../app/radix-connect" }
radix-connect-models = { path = "../app/radix-connect-models" }
signing = { path = "../app/signing" }
network = { path = "../common/network" }
next-derivation-index-ephemeral = { path = "../factors/next-derivation-index-ephemeral" }
sub-systems = { path = "../system/sub-systems" }
interactors = { path = "../system/interactors" }
key-derivation-traits = { path = "../app/key-derivation-traits" }
signing-traits = { path = "../app/signing-traits" }
sargon-os = { path = "../system/os/os" }
sargon-os-transaction = { path = "../system/os/transaction" }
sargon-os-accounts = { path = "../system/os/accounts" }
sargon-os-factors = { path = "../system/os/factors" }
sargon-os-security-center = { path = "../system/os/security-center" }
sargon-os-signing = { path = "../system/os/signing" }
gateway-client-and-api = { path = "../gateway/client-and-api" }

# === RADIX DEPENDENCIES ===
radix-common = { workspace = true }
radix-engine-interface = { workspace = true }
radix-engine-toolkit-common = { workspace = true }
radix-transactions = { workspace = true }

# === EXTERNAL DEPENDENCIES ===
async-std = { workspace = true }
async-trait = { workspace = true }
base64 = { workspace = true }
derive_more = { workspace = true }
enum-iterator = { workspace = true }
futures = { workspace = true }
hex = { workspace = true }
log = { workspace = true }
paste = { workspace = true }
pretty_assertions = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true }

# Fixes nasty iOS bug "_kSecMatchSubjectWholeString", see https://github.com/kornelski/rust-security-framework/issues/203
# This is a workaround to fix a bug with version 2.11.0 that added some symbols that are not available on iOS
# The bug is fixed already but the fix is not released yet. https://github.com/kornelski/rust-security-framework/pull/204
[target.'cfg(target_os = "ios")'.dependencies]
security-framework = { version = "=2.10" }
security-framework-sys = "=2.10.0"

[dev-dependencies]
actix-rt = { workspace = true }

[build-dependencies]
cargo_toml = { workspace = true }
