[package]
name = "sargon"
version = "1.1.99"
edition = "2021"
build = "build.rs"

[[test]]
name = "vectors"

[lib]
crate-type = ["staticlib", "cdylib", "lib"]

[dependencies]
# === SARGON CRATES ===
identified-vec-of = { path = "../types/identified-vec-of" }
sargon-hierarchical-deterministic = { path = "../crypto/hd" }
sargon-factors = { path = "../factors/factors" }
sargon-core-misc = { path = "../core/misc" }
sargon-core-tx = { path = "../transaction/foundation" }
sargon-keys-collector = { path = "../factors/keys-collector" }
sargon-encryption = { path = "../crypto/encryption" }
sargon-addresses = { path = "../crypto/addresses" }
sargon-transaction-models = { path = "../transaction/models" }
sargon-manifests = { path = "../transaction/manifests" }
sargon-profile = { path = "../profile/models/profile_SPLIT_ME" }
sargon-profile-gateway = { path = "../profile/models/gateway" }
sargon-profile-logic = { path = "../profile/logic/logic_SPLIT_ME" }
sargon-profile-security-structures = { path = "../profile/models/security-structures" }
sargon-factor-instances-provider = { path = "../factors/instances-provider" }
gateway-models = { path = "../gateway/models" }
sargon-clients = { path = "../system/clients/clients" }
sargon-drivers = { path = "../system/drivers" }
gateway-client-and-api = { path = "../gateway/client-and-api" }

# === RADIX DEPENDENCIES ===
radix-common = { workspace = true }
radix-engine-interface = { workspace = true }
radix-engine-toolkit-common = { workspace = true }
radix-transactions = { workspace = true }

# === EXTERNAL DEPENDENCIES ===
async-std = { workspace = true }
async-trait = { workspace = true }
base64 = { workspace = true }
derive_more = { workspace = true }
enum-as-inner = { workspace = true }
enum-iterator = { workspace = true }
futures = { workspace = true }
hex = { workspace = true }
log = { workspace = true }
paste = { workspace = true }
pretty_assertions = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true }

# Fixes nasty iOS bug "_kSecMatchSubjectWholeString", see https://github.com/kornelski/rust-security-framework/issues/203
# This is a workaround to fix a bug with version 2.11.0 that added some symbols that are not available on iOS
# The bug is fixed already but the fix is not released yet. https://github.com/kornelski/rust-security-framework/pull/204
[target.'cfg(target_os = "ios")'.dependencies]
security-framework = { version = "=2.10" }
security-framework-sys = "=2.10.0"

[dev-dependencies]
actix-rt = { workspace = true }

[build-dependencies]
cargo_toml = { workspace = true }
