[package]
name = "sargon-uniffi"
version = "1.1.99"
edition = "2021"
build = "build.rs"

[[test]]
name = "vectors"

[lib]
crate-type = ["staticlib", "cdylib", "lib"]

[[bin]]
name = "sargon-bindgen"
path = "src/bindgen/bin.rs"

[dependencies]
# === SARGON CRATES ===
identified-vec-of = { path = "../../types/identified-vec-of" }
sargon-hierarchical-deterministic = { path = "../../crypto/hd" }
sargon-encryption = { path = "../../crypto/encryption" }
sargon-factors = { path = "../../factors/factors" }
sargon-keys-collector = { path = "../../factors/keys-collector" }
sargon-addresses = { path = "../../crypto/addresses" }
sargon-transaction-models = { path = "../../transaction/models" }
sargon-manifests = { path = "../../transaction/manifests" }
sargon-profile = { path = "../../profile/models/profile_SPLIT_ME" }
sargon-profile-logic = { path = "../../profile/logic/logic_SPLIT_ME" }
sargon-profile-security-structures = { path = "../../profile/models/security-structures" }
sargon-factor-instances-provider = { path = "../../factors/instances-provider" }
gateway-models = { path = "../../gateway/models" }
sargon-core-misc = { path = "../../core/misc" }
sargon-clients = { path = "../../system/clients/clients" }
sargon-drivers = { path = "../../system/drivers" }
gateway-client-and-api = { path = "../../gateway/client-and-api" }

sargon = { path = "../../sargon_SPLIT_ME" }
sargon-uniffi-conversion-macros = { path = "../../uniffi/conversion-macros" }

# === RADIX DEPENDENCIES ===
radix-engine-toolkit = { workspace = true }

# === EXTERNAL DEPENDENCIES ===
assert-json-diff = { workspace = true }
async-trait = { workspace = true }
base64 = { workspace = true }
camino = { workspace = true }
clap = { workspace = true }
delegate = { workspace = true }
derive_more = { workspace = true }
enum-as-inner = { workspace = true }
enum-iterator = { workspace = true }
hex = { workspace = true }
indexmap = { workspace = true }
iso8601-timestamp = { workspace = true }
itertools = { workspace = true }
log = { workspace = true }
paste = { workspace = true }
preinterpret = { workspace = true }
pretty_assertions = { workspace = true }
pretty_env_logger = { workspace = true }
rand = { workspace = true }
regex = { workspace = true }
strum = { workspace = true }
thiserror = { workspace = true }
uniffi = { workspace = true }
url = { workspace = true }
uuid = { workspace = true }
zeroize = { workspace = true }

[dev-dependencies]
actix-rt = { workspace = true }
uniffi = { workspace = true, features = ["bindgen-tests"] }

[build-dependencies]
uniffi = { workspace = true, features = ["build"] }

[lints.rust]
unexpected_cfgs = { level = "forbid", check-cfg = ['cfg(tarpaulin_include)'] }
